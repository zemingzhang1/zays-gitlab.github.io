{"ast":null,"code":"var _jsxFileName = \"/Volumes/Work Data/Projects/Personal-Website.github.io/src/components/Portfolio.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActionArea, CardMedia, Typography, Grid, Container, Item } from '@material-ui/core/';\nvar projectCountz = 0;\nvar array = [];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      backgroundColor: theme.palette.primary.light\n    },\n    card: {\n      maxWidth: 250,\n      margin: 0\n    },\n    media: {\n      height: 160\n    }\n  };\n}); // style={{width:\"300px\", marginLeft:'10px',marginRight:\"10px\"}}\n\nexport default function Portfolio(props) {\n  var classes = useStyles(); // window.onresize = function(event) {\n  //     var width = document.getElementById(\"portfolio-wrapper\").clientWidth;;\n  //     var rowFit = Math.floor(width/300);\n  //     var newMarg = (width-(rowFit*300))/(rowFit*2)\n  //     console.log(rowFit);        \n  //     for (let i of array){\n  //         var element = document.getElementById(i);\n  //         element.style.marginLeft = String(newMarg) + 'px';\n  //         element.style.marginRight = String(newMarg) + 'px';\n  //         element.style.float = \"left\"\n  //     }\n  // };\n\n  if (props.data) {\n    var projects = props.data.projects.map(function (projects) {\n      array.push(projects.title + \"@projectID\");\n      var projectImage = 'images/portfolio/' + projects.image;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: projects.title,\n        id: projects.title + \"@projectID\",\n        className: \"columns portfolio-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"face face1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"stars\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"h2\", {\n        class: \"javascript\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, projects.skills), /*#__PURE__*/React.createElement(\"p\", {\n        class: \"javascript\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }, \" \", projects.category))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"face face2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \">\", /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, projects.title))));\n    });\n  } // const myelement = (\n  //     <div class=\"card\">\n  //         <div class=\"face face1\">\n  //             <div class=\"content\">\n  //                 <span class=\"stars\"></span>\n  //                 <h2 class=\"javascript\">Github Projects</h2>\n  //                 <p class=\"javascript\"> Please click on this site to see more of my projects, finished and unfinished :) </p>\n  //                 </div>\n  //             </div>\n  //         <div class=\"face face2\">\n  //             <h2>01</h2>\n  //         </div>\n  //     </div>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.root,\n    id: \"portfolio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Check Out Some of My Works.\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"portfolio-wrapper\",\n    className: \" bgrid-halves bgrid-thirds s-bgrid-quarters cf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, projects)));\n} // var projects = props.data.projects.map(\n//     function (projects) {\n//         var projectImage = 'images/portfolio/' + projects.image;\n//         return (\n//             <div key={projects.title} className=\"columns portfolio-item\">\n//             <Card className={classes.card}>\n//                 <CardActionArea href={projects.url}>\n//                     <CardMedia className={classes.media} image={projectImage} title={projects.title} />\n//                     <CardContent>\n//                         <Typography gutterBottom variant=\"h5\" component=\"h2\">{projects.title}</Typography>\n//                         <Typography variant=\"body2\" gutterBottom>{projects.category}</Typography>\n//                     </CardContent>\n//                 </CardActionArea>\n//             </Card>\n//             </div>\n//         )\n//     })","map":{"version":3,"sources":["/Volumes/Work Data/Projects/Personal-Website.github.io/src/components/Portfolio.js"],"names":["React","makeStyles","Card","CardContent","CardActionArea","CardMedia","Typography","Grid","Container","Item","projectCountz","array","useStyles","theme","root","display","backgroundColor","palette","primary","light","card","maxWidth","margin","media","height","Portfolio","props","classes","data","projects","map","push","title","projectImage","image","skills","category"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardContent, CardActionArea, CardMedia, Typography, Grid, Container, Item } from '@material-ui/core/';\nvar projectCountz = 0;\n\nvar array= [];     \n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        backgroundColor: theme.palette.primary.light,\n    },\n    card: {\n        maxWidth: 250,\n        margin: 0,\n    },\n    media: {\n        height: 160,\n    },\n}));\n\n// style={{width:\"300px\", marginLeft:'10px',marginRight:\"10px\"}}\nexport default function Portfolio(props) {\n    const classes = useStyles();\n\n    // window.onresize = function(event) {\n    //     var width = document.getElementById(\"portfolio-wrapper\").clientWidth;;\n    //     var rowFit = Math.floor(width/300);\n    //     var newMarg = (width-(rowFit*300))/(rowFit*2)\n    //     console.log(rowFit);        \n    //     for (let i of array){\n    //         var element = document.getElementById(i);\n    //         element.style.marginLeft = String(newMarg) + 'px';\n    //         element.style.marginRight = String(newMarg) + 'px';\n    //         element.style.float = \"left\"\n    //     }\n    // };\n    \n    if (props.data) {\n        var projects = props.data.projects.map(\n        function (projects) {\n            array.push(projects.title+\"@projectID\");\n            var projectImage = 'images/portfolio/' + projects.image;\n            return (\n                <div key={projects.title} id={projects.title+\"@projectID\"} className=\"columns portfolio-item\">\n                    <div class=\"card\">\n                        <div class=\"face face1\">\n                            <div class=\"content\">\n                                <span class=\"stars\"></span>\n                                <h2 class=\"javascript\">{projects.skills}</h2>\n                                <p class=\"javascript\"> {projects.category}</p>\n                            </div>\n                        </div>\n                        <div class=\"face face2\"  >\n>\n                            <h2>{projects.title}</h2>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    // const myelement = (\n    //     <div class=\"card\">\n    //         <div class=\"face face1\">\n    //             <div class=\"content\">\n    //                 <span class=\"stars\"></span>\n    //                 <h2 class=\"javascript\">Github Projects</h2>\n    //                 <p class=\"javascript\"> Please click on this site to see more of my projects, finished and unfinished :) </p>\n    //                 </div>\n    //             </div>\n    //         <div class=\"face face2\">\n    //             <h2>01</h2>\n    //         </div>\n    //     </div>\n    // );\n    \n    return (\n        <section className={classes.root} id=\"portfolio\">\n            <Container className=\"row\">\n            <h1>Check Out Some of My Works.</h1>\n                <div id=\"portfolio-wrapper\" className=\" bgrid-halves bgrid-thirds s-bgrid-quarters cf\">\n                        {projects}\n                </div>\n            </Container>\n        </section>\n    );\n}\n\n// var projects = props.data.projects.map(\n//     function (projects) {\n//         var projectImage = 'images/portfolio/' + projects.image;\n\n//         return (\n//             <div key={projects.title} className=\"columns portfolio-item\">\n//             <Card className={classes.card}>\n//                 <CardActionArea href={projects.url}>\n//                     <CardMedia className={classes.media} image={projectImage} title={projects.title} />\n//                     <CardContent>\n//                         <Typography gutterBottom variant=\"h5\" component=\"h2\">{projects.title}</Typography>\n//                         <Typography variant=\"body2\" gutterBottom>{projects.category}</Typography>\n//                     </CardContent>\n//                 </CardActionArea>\n//             </Card>\n//             </div>\n//         )\n//     })"]},"metadata":{},"sourceType":"module"}